import 'dart:typed_data';

import 'package:cadillac/pages/registrationPage.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:form_builder_image_picker/form_builder_image_picker.dart';
import 'package:image_picker/image_picker.dart';
import 'package:path_provider/path_provider.dart';

import 'package:uuid/uuid.dart';
import 'package:uuid/uuid_util.dart';


import 'package:flutter/services.dart';

import 'package:http/http.dart' as http;
import 'dart:convert';
import 'dart:async';



import '../../models/users.dart';
//import '../../models/user2.dart';


import 'package:cadillac/variables.dart';
import 'dart:io';


import 'package:cadillac/pages/home.dart';

import 'package:cadillac/pages/members.dart';
import 'package:cadillac/pages/news.dart';
import 'package:cadillac/pages/shop.dart';
import 'package:cadillac/pages/partners.dart';
import 'package:cadillac/pages/contacts.dart';

import 'package:cadillac/NavDrawer.dart';
import 'package:cadillac/widgets/titlePage.dart';
import 'package:cadillac/widgets/gallery.dart';
// import 'package:carousel_slider/carousel_slider.dart';
import 'package:card_swiper/card_swiper.dart';

import '../models/products.dart';
import 'gift.dart';
import 'editAccount.dart';

class Account extends StatelessWidget {
//class Account extends StatefulWidget {
  // final User currentUser;

  Account({Key? key, required this.userId}) : super(key: key);

  late dynamic userId;

  late Uint8List bytes;
  // late File _image;
//строка ниже работает правильно
  // late Uint8List imageData = base64.decode("");
  //late Uint8List imageData = base64.decode("");
  late Uint8List imageData = base64.decode("L2RhdGEvdXNlci8wL2NvbS5jYWRpbGxhYy5jYWRpbGxhYy9jYWNoZS9pbWFnZV9waWNrZXI3MTA0MjgyNzIyNjY1NDg1MzgzLmpwZw==");

  var response = 'file:////data/user/0/com.cadillac.cadillac/cache/image_picker7104282722665485383.jpg';
  // String base64String = BASE64.encode(response.bodyBytes);

  //late Uint8List imageData = base64.decode("L2RhdGEvdXNlci8wL2NvbS5jYWRpbGxhYy5jYWRpbGxhYy9jYWNoZS9pbWFnZV9waWNrZXI5MTU1MDU4MjAxOTg4MzE1ODc1LmpwZw==");
  //https://png.pngtree.com/png-clipart/20190424/ourlarge/pngtree-hand-drawn-cute-small-leaves-png-image_981721.jpg
//   @override
//   State<Account> createState() => _AccountState();
// }

  //late XFile? photo;
  //class _AccountState extends State<Account> {
    //late dynamic user;
    //late dynamic userId;
    late Uint8List base64Path;
    late File _image;
  late File _car1;
  late File _car2;
  late File _car3;
  late Uint8List data;
  late String appDocPath;
  bool isLoadedImage = false;


  //getApplicationDirectoryPath();

  //   @override
  //   initState()  {
  //   print('init state account');
  //   print(userId);
  //    // user = getUser(userId);
  //     setState(() {
  //       uuid = '';
  //     });
  //   //
  //   super.initState();
  //   //   // uuid = userId;
  //
  //   //late dynamic userId = uuid;
  // }


  // currentUser<User> = User();

//   @override
//   _AccountState createState() => _AccountState();
// }

  // class _AccountState extends State<Account> {
  // // get currentUser => null;
  // //late dynamic userId;
  // late bool _loading;




    //get userId => null;
  //set userId = userId;
  //late User _user;
  //late Future<User> user;
  // late Future<UsersList> usersList;

  // @override
  // void initState() {
  //   super.initState();
  //   print('init state account');
  //   _loading = false;
  //   //userId = this.userId;
  //   //
  //   // print('userId: ${userId}'); //null
  //
  //   //_user = currentUser;
  //   // var user = getUser(userId);
  //   // print(user);
  //
  //
  //
  // // var usersList = getUsersList();
  // // print("usersList: ${getUsersList()}");
  // // print("usersList: ${getUser(userId)}");
  //
  // }





    // var userBox = Hive.box<User>(HiveBoxes.user);

  @override
  Widget build(BuildContext context) {
    // Image image;
    // var hasLocalImage =
    // File('${widget.appDocPath}/background_image').existsSync();
    // if (hasLocalImage) {
    //   var bytes =
    //   File('${widget.appDocPath}/background_image').readAsBytesSync();
    //   image = Image.memory(bytes);

    //late String fileName;
    dynamic user;
    print('user account');
    print('load');
    print('userId: ${userId}');

    // var str = "/data/user/0/com.cadillac.cadillac/cache/image_picker3644508664154176839.jpg";
    // str = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRXXhJxbqpnNrt0I2ll7CuPzek0YU7X_iI25A&usqp=CAU";
    // var bytes = utf8.encode(str);
    // var base64Str = base64.encode(bytes);

    // Future<String> getApplicationDirectoryPath() async {
    //   Directory appDocDir = await getApplicationDocumentsDirectory();
    //   var appDocPath = appDocDir.path;
    //   print('appDocPath');
    //   print(appDocPath);
    //   return appDocPath;
    // }
    // getApplicationDirectoryPath();




      // body: (File('${widget.appDocPath}/background_image').existsSync())
      //     ? Center(
      //   child: image,
      // )
      //     : Text('NO PICTURE HAS BEEN SELECTED NOW OR IN THE PAST');

    //print('userId: ${userId}');
    //uuid = userId;

    //Uint8List data = rootBundle.load('assets/images/avatar.png') as Uint8List;
    // void loadAsset() async {
    //   Uint8List data = (await rootBundle.load('assets/images/avatar.png')) .buffer .asUint8List();
    //
    // }
    //
    // loadAsset();
    //user = getUserInfo();
    //uuid = 'df065ab7-ed71-11ec-a426-002590eb3418';

    user = getUser(userId);

  //  _getImage();
    // setState(() {
    // base64Path = base64.decode(user.path);
    // print(base64Path);
    // });

//print(photo);
    //User currentUser = User( email: '', birthday: '', userId: userId, phone: '', username: '' );
    //user = getUser(userId);


    // print(user.runtimeType);
    // getCookie();

    return MaterialApp(
        theme: ThemeData(scaffoldBackgroundColor: const Color(0xFF181c33)),
        title: 'Cadillac',
        debugShowCheckedModeBanner: false,
        //initialRoute: '/account',

        routes: {
          '/home': (context) => Home(),
          // '/account': (context) => Account(currentUser: currentUser,),
          '/members': (context) => Members(),
          '/news': (context) => const News(),
          '/shop': (context) => Shop(),
          '/partners': (context) => Partners(),
          '/contacts': (context) => Contacts(),
          '/gift': (context) => const Gift(),

        },

        home: Scaffold(
          appBar: AppBar(
            backgroundColor: const Color(0xFF181c33),
            shadowColor: Colors.transparent,
            elevation: 0.0,
            leading: Builder(
              builder: (BuildContext context) {
                return IconButton(
                  icon: SvgPicture.asset('assets/images/burger.svg'),
                  onPressed: () { Scaffold.of(context).openDrawer(); },
                  tooltip: MaterialLocalizations.of(context).openAppDrawerTooltip,
                );
              },
            ),
          ),

          body: FutureBuilder<User>(
              future: user,
              builder: (context, snapshot) {
                print('snapshot.data?.path');

                // var str = "/data/user/0/com.cadillac.cadillac/cache/image_picker3644508664154176839.jpg";
                // var bytes = utf8.encode(str);
                // var base64Str = base64.encode(bytes);
                // print(base64Str);

                //base64Path = base64.decode(snapshot.data.path);
                if (snapshot.connectionState != ConnectionState.done) {
                  return const Center(child: CircularProgressIndicator());
                }

                if (snapshot.hasError) {
                  return Center(child: Text(snapshot.error.toString()));
                }

                if (snapshot.hasData) {
                  List<File> images = [];

                  var fileExtension = snapshot.data?.path.substring(
                      (snapshot.data?.path.length)! - 3);
                  if (fileExtension == 'jpg' || fileExtension == 'png' ||
                      fileExtension == 'svg') {
                    isLoadedImage = true;
                  } else {
                    isLoadedImage = false;
                  }
                  _image = File('${snapshot.data?.path}');

                  var fileExtensionCar1 = snapshot.data?.path.substring(
                      (snapshot.data?.path.length)! - 3);
                  if (fileExtensionCar1 == 'jpg' ||
                      fileExtensionCar1 == 'png' ||
                      fileExtensionCar1 == 'svg') {
                    _car1 = File('${snapshot.data?.car1}');
                    images.add(_car1);
                  }

                  if (snapshot.data?.car2 != null) {
                    var fileExtensionCar2 = snapshot.data?.path.substring(
                        (snapshot.data?.path.length)! - 3);
                    if (fileExtensionCar2 == 'jpg' ||
                        fileExtensionCar2 == 'png' ||
                        fileExtensionCar2 == 'svg') {
                      _car2 = File('${snapshot.data?.car2}');
                      if (_car2.existsSync()) {
                        images.add(_car2);
                      } else {
                        print('car2 no exist');
                      }
                    }
                  }

                  if (snapshot.data?.car3 != null) {
                    var fileExtensionCar3 = snapshot.data?.path.substring(
                        (snapshot.data?.path.length)! - 3);
                    if (fileExtensionCar3 == 'jpg' ||
                        fileExtensionCar3 == 'png' ||
                        fileExtensionCar3 == 'svg') {
                      _car3 = File('${snapshot.data?.car3}');
                      if (_car3.existsSync()) {
                        images.add(_car3);
                      } else {
                        print('car3 no exist');
                      }
                    }
                  }
                  print('images.length');
                  print(images.length);
                  var countImages = images.length;


                  return Center(
                      child: Container(
                          width: 284,

                          child: Column(
                              mainAxisAlignment: MainAxisAlignment.start,
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Expanded(
                                    child: SingleChildScrollView(
                                        child: Column(
                                            children: [
                                              const TitlePage(
                                                  title: 'мой аккаут \nавтоклуба cadillac'),

                                              Container(
                                                // height: 100,
                                                  margin: const EdgeInsets.only(
                                                      top: 43.0, bottom: 43.0),
                                                  color: Colors.transparent,
                                                  child: Row(
                                                      mainAxisAlignment: MainAxisAlignment
                                                          .spaceBetween,
                                                      children: [
                                                        Column(
                                                            mainAxisAlignment: MainAxisAlignment
                                                                .start,
                                                            crossAxisAlignment: CrossAxisAlignment
                                                                .start,
                                                            mainAxisSize: MainAxisSize
                                                                .max,
                                                            children: [
                                                              Row(
                                                                mainAxisAlignment: MainAxisAlignment
                                                                    .spaceBetween,

                                                                children: [
                                                                  Container(
                                                                    height: 36,
                                                                    margin: const EdgeInsets
                                                                        .only(
                                                                      right: 18.0,),
                                                                    alignment: Alignment
                                                                        .centerLeft,
                                                                    child: SvgPicture
                                                                        .asset(
                                                                        'assets/images/account.svg',
                                                                        semanticsLabel: 'Icon author',
                                                                        height: 22.0
                                                                    ),
                                                                  ),
                                                                  Text(
                                                                      '${snapshot
                                                                          .data
                                                                          ?.username}'
                                                                          .toUpperCase(),
                                                                      textAlign: TextAlign
                                                                          .center,
                                                                      style: const TextStyle(
                                                                        fontSize: 14.0,
                                                                        fontWeight: FontWeight
                                                                            .normal,
                                                                        fontFamily: 'CadillacSans',
                                                                        color: Colors
                                                                            .white,
                                                                        height: 1.4, //line-height : font-size
                                                                      )
                                                                  )
                                                                ],
                                                              ),
                                                              Row(
                                                                mainAxisAlignment: MainAxisAlignment
                                                                    .start,
                                                                mainAxisSize: MainAxisSize
                                                                    .min,
                                                                children: [
                                                                  Container(
                                                                      height: 36,
                                                                      //margin: const EdgeInsets.only(right: 18.0, ),
                                                                      alignment: Alignment
                                                                          .centerLeft,
                                                                      child: IconButton(
                                                                        alignment: Alignment
                                                                            .centerLeft,
                                                                        padding: const EdgeInsets
                                                                            .all(
                                                                            0),
                                                                        iconSize: 22.0,
                                                                        icon: SvgPicture
                                                                            .asset(
                                                                          'assets/images/gift.svg',
                                                                          semanticsLabel: 'Icon gift',
                                                                          height: 22.0,

                                                                        ),
                                                                        onPressed: () {
                                                                          Route route = MaterialPageRoute(
                                                                              builder: (
                                                                                  context) => const Gift());
                                                                          Navigator
                                                                              .push(
                                                                              context,
                                                                              route);
                                                                        },
                                                                      )
                                                                  ),

                                                                  Text(
                                                                      '${snapshot
                                                                          .data
                                                                          ?.email}'
                                                                          .toUpperCase(),
                                                                      textAlign: TextAlign
                                                                          .left,
                                                                      style: const TextStyle(
                                                                        fontSize: 14.0,
                                                                        fontWeight: FontWeight
                                                                            .normal,
                                                                        fontFamily: 'CadillacSans',
                                                                        color: Colors
                                                                            .white,
                                                                        height: 1.4, //line-height : font-size
                                                                      )
                                                                  )
                                                                ],
                                                              ),
                                                              Row(
                                                                mainAxisAlignment: MainAxisAlignment
                                                                    .start,
                                                                children: [
                                                                  Container(
                                                                      height: 36,
                                                                      // margin: const EdgeInsets.only(right: 18.0, ),
                                                                      alignment: Alignment
                                                                          .centerLeft,
                                                                      child: IconButton(
                                                                        alignment: Alignment
                                                                            .centerLeft,
                                                                        padding: const EdgeInsets
                                                                            .all(
                                                                            0),
                                                                        iconSize: 22.0,
                                                                        icon: SvgPicture
                                                                            .asset(

                                                                          'assets/images/edit.svg',
                                                                          semanticsLabel: 'Icon edit',
                                                                          height: 15.0,

                                                                        ),
                                                                        onPressed: () {
                                                                          Route route = MaterialPageRoute(
                                                                              builder: (
                                                                                  context) =>
                                                                                  Edit());
                                                                          Navigator
                                                                              .push(
                                                                              context,
                                                                              route);
                                                                        },
                                                                      )

                                                                  ),
                                                                  const Text(
                                                                    'Изменить данные',
                                                                    textAlign: TextAlign
                                                                        .center,
                                                                    style: TextStyle(
                                                                      fontSize: 14.0,
                                                                      fontWeight: FontWeight
                                                                          .normal,
                                                                      fontFamily: 'CadillacSans',
                                                                      color: Color(
                                                                          0xFF515569),
                                                                      height: 1.4, //line-height : font-size
                                                                    ),
                                                                  )
                                                                ],
                                                              ),
                                                            ]
                                                        ),


                                                        ClipOval(
                                                          child: CircleAvatar(
                                                            radius: 48,
                                                            backgroundColor: Colors
                                                                .white,
                                                            child: isLoadedImage
                                                                ? Image.file(
                                                                _image,
                                                                fit: BoxFit
                                                                    .cover,
                                                                width: 96,
                                                                height: 96)
                                                                :
                                                            Text('no image'),

                                                            // child: Image.memory(base64.decode("")
                                                          ),
                                                        )

                                                      ]

                                                  )
                                              ),

                                              Text('ваш именной номер'
                                                  .toUpperCase(),
                                                  textAlign: TextAlign.center,
                                                  style: const TextStyle(
                                                    fontSize: 14.0,
                                                    fontWeight: FontWeight
                                                        .normal,
                                                    fontFamily: 'CadillacSans',
                                                    color: Colors.white,
                                                    height: 1.4, //line-height : font-size
                                                  )
                                              ),
                                              Container(
                                                width: 284,
                                                decoration: BoxDecoration(
                                                  borderRadius: BorderRadius
                                                      .circular(10),
                                                  color: const Color(
                                                      0xFF515569),
                                                ),
                                                padding: const EdgeInsets.all(
                                                    15),
                                                margin: const EdgeInsets.only(
                                                    top: 10, bottom: 25),
                                                child: const Text(
                                                    '379379379379',
                                                    textAlign: TextAlign.left,
                                                    style: TextStyle(
                                                      fontSize: 16.0,
                                                      fontWeight: FontWeight
                                                          .w600,
                                                      fontFamily: 'CadillacSans',
                                                      color: Colors.white,
                                                      // height: 1.4, //line-height : font-size
                                                    )
                                                ),
                                              ),
                                              Text('ваш автомобиль'
                                                  .toUpperCase(),
                                                  textAlign: TextAlign.center,
                                                  style: const TextStyle(
                                                    fontSize: 14.0,
                                                    fontWeight: FontWeight
                                                        .normal,
                                                    fontFamily: 'CadillacSans',
                                                    color: Colors.white,
                                                    height: 1.5, //line-height : font-size
                                                  )
                                              ),
                                              Text('${snapshot.data?.carname}'
                                                  .toUpperCase(),
                                                  // Text('cadillac'.toUpperCase(),
                                                  textAlign: TextAlign.center,
                                                  style: const TextStyle(
                                                    fontSize: 24.0,
                                                    fontWeight: FontWeight
                                                        .normal,
                                                    fontFamily: 'CadillacSans',
                                                    color: Colors.white,
                                                    height: 1.17, //line-height : font-size
                                                  )
                                              ),

                                              Container(
                                                width: MediaQuery
                                                    .of(context)
                                                    .size
                                                    .width,
                                                height: 200,
                                                padding: EdgeInsets.zero,
                                                margin: const EdgeInsets.only(
                                                    top: 10,
                                                    bottom: 30,
                                                    left: 0,
                                                    right: 0),
                                                color: const Color(
                                                    0xFF181C33),
                                                // child: Gallery()
                                                child: images.length == 1 ?
                                                Container(
                                                    decoration: const BoxDecoration(
                                                      borderRadius: BorderRadius
                                                          .all(
                                                          Radius.circular(20)),
                                                    ),
                                                    //margin: const EdgeInsets.only(left: 10,right: 10),
                                                    //child: Text('no image')
                                                    child: ClipRRect(
                                                        borderRadius: BorderRadius
                                                            .all(
                                                            Radius.circular(
                                                                20)),
                                                        child: Image.file(
                                                          images[0], width: 285,
                                                          height: 160,
                                                          // ${snapshot.data?.car}[index],
                                                          // centerSlice: Rect.fromPoints(const Offset(50.0, 0.0), const Offset(0, 0)),
                                                          fit: BoxFit.cover,
                                                          alignment: Alignment
                                                              .centerLeft,
                                                        )
                                                    )
                                                )
                                                    : Swiper(
                                                  //containerHeight: 160,
                                                  //containerWidth: 390,
                                                    layout: SwiperLayout.CUSTOM,
                                                    customLayoutOption:
                                                    CustomLayoutOption(
                                                        startIndex: -1,
                                                        stateCount: 2)
                                                      ..addTranslate([
                                                        const Offset(
                                                            -28.0, 0.0),
                                                        const Offset(
                                                            256.0, 0.0),
                                                        // const Offset(304.0, 0.0)
                                                      ]),
                                                    itemCount: countImages,
                                                    viewportFraction: 0.8,
                                                    itemHeight: 160,
                                                    itemWidth: 284,
                                                    // outer: true,
                                                    itemBuilder: (
                                                        BuildContext context,
                                                        int index) {
                                                      return Container(
                                                          decoration: const BoxDecoration(
                                                            borderRadius: BorderRadius
                                                                .all(
                                                                Radius.circular(
                                                                    20)),
                                                          ),
                                                          margin: const EdgeInsets
                                                              .only(left: 10,
                                                              right: 10),
                                                          child: Image.file(
                                                            images[index],
                                                            width: 285,
                                                            height: 160,
                                                            // ${snapshot.data?.car}[index],
                                                            // centerSlice: Rect.fromPoints(const Offset(50.0, 0.0), const Offset(0, 0)),
                                                            fit: BoxFit.cover,
                                                            alignment: Alignment
                                                                .centerLeft,
                                                          )
                                                      );
                                                    },

                                                    // indicatorLayout: PageIndicatorLayout.COLOR,
                                                    // autoplay: true,

                                                    // itemWidth: 285.0,
                                                    pagination: const SwiperPagination(
                                                        margin: EdgeInsets
                                                            .fromLTRB(
                                                            0.0, 0.0, 0.0,
                                                            45.0),
                                                        builder: DotSwiperPaginationBuilder(
                                                            color: Colors.white,
                                                            activeColor: Color(
                                                                0xFF8F97BF),
                                                            size: 7.0,
                                                            activeSize: 7.0
                                                        )
                                                    )
                                                ),
                                              ),

                                            ]
                                        )
                                    )
                                )
                              ]
                          )
                      )
                  );
                }
                return const Center(child: Text('no data'));
              }
          ),


      //работает вывод картинки ниже!
    // body: CircleAvatar(
    //     radius: 48,
    //     backgroundColor: Colors.white,
    //     //child: Image.memory(imageData),
    //   //child: Image.memory(base64Encode([165, 171, 97])),
    //     child: Image.file(_image),
    // ),



  //]


            drawer: NavDrawer(),
        )

    );
  }

  // Future<List<User>> getUser(userId) async {



}

Future<User> getUser(userId) async {
  print('getUser');
  print('userId: $userId');


  //String apiurl = "http://localhost/test/get_user.php";
  String apiurl = baseUrl + "/test/get_user.php"; // get jsonplaceholder
  // final response = await http.post(Uri.parse(apiurl), body:{'userId': userId});
  var birthday = '111';
  var phone = '111';
  var email= '111';
  // var userId;
  // final response = await http.post(Uri.parse(apiurl), body:{'phone': phone,'email': email, 'birthday': birthday},headers: {'Accept':'application/json, charset=utf-8',"Access-Control-Allow-Origin": "*",
  //   "Access-Control-Allow-Methods": "GET,PUT,POST,DELETE,PATCH,OPTIONS"});
  final response = await http.post(Uri.parse(apiurl),body:{'userId': userId}, headers: {'Accept':'application/json, charset=utf-8',"Access-Control-Allow-Origin": "*",
    "Access-Control-Allow-Methods": "GET,PUT,POST,DELETE,PATCH,OPTIONS"});
  if (response.statusCode == 200) {
    print(response.statusCode);
    print(response.body);



    // print(response);
    final userJson = json.decode(response.body);
    print(User.fromJson(userJson).username);
    print(User.fromJson(userJson).path.runtimeType);
    print('userJson["path"]');
    print(userJson["path"]);


    // print(base64.decode(userJson["path"]));
    // userJson["path"] = base64.decode(userJson["path"]);

    //path = await getpathImage(photo[0].path);

    //set fileName => userJson.path;
    // var fileName = userJson.path;
    // print(fileName);

    //imageData = base64.decode(userJson.path);
    //print(imageData);
    //userJson.path = bytes;
    // var userId = userJson.userId;  // error load account
    // print('userId')
    // print(userId);
    //final userJson = response.body;
    // print('userJson');
    // print(userJson);

    var data = User.fromJson(userJson);

    return User.fromJson(userJson);
    //return(data);

    //return userJson.map((json) => User.fromJson(userJson));
  } else {
    throw Exception('Error fetching users');
  }
}
